#We want to reward our users who have been around the longest. 
select username,created_at
from users
order by created_at
limit 5;

#What day of the week do most users register on?
with ta as(
select username,date_format(created_at,"%W") AS day_week
from users)
select day_week,count(day_week)
from ta
group by day_Week;

#We want to target our inactive users with an email campaign.
SELECT username,photos.id
FROM users
left JOIN photos ON users.id = photos.user_id
where photos.id is NULL;

#We're running a new contest to see who can get the most likes on a single photo.
# WHO WON??!!*/
select photos.id,count(likes.created_at) total
from users
join photos on users.id = photos.user_id
join likes on photos.id = likes.photo_id
group by photo_id
order by total desc;

#How many times does the average user post?*/
SELECT ROUND((SELECT COUNT(*)FROM photos)/(SELECT COUNT(*) FROM users),2);


#user ranking by postings higher to lower:
select users.username,count(photos.image_url) as totalposts
from users
join photos on users.id = photos.user_id
group by username
order by 2 desc ;

#Total Posts by users (longer versionof SELECT COUNT(*)FROM photos) 
select count(*) from photos;

#total numbers of users who have posted at least one time 
##total numbers of users who have posted at least one time 
with ta as(
select count(distinct(users.id)) total
from users
join photos on users.id = photos.user_id)
select * from ta
where total >= 1;

#Find the users who have never posted a photo*/
select users.username,photos.image_url
from users
left join photos on users.id = photos.user_id
where photos.image_url is NULL;

#/*A brand wants to know which hashtags to use in a post
#What are the top 5 most commonly used hashtags?*/
select tag_name , count(tag_name) total_tags
from tags
join photo_tags on tags.id = photo_tags.tag_id
group by tag_name
order by 2 desc
limit 5;


#/*We have a small problem with bots on our site...
#Find users who have liked every single photo on the site*/
select users.username,count(likes.created_at) total_likes_by_user
from users
join likes on users.id = likes.user_id
group by username
HAVING total_likes_by_user = (SELECT COUNT(*) FROM photos);

#Find the percentage of our users who have never commented on a photo
SELECT tableA.total_A AS 'Number Of Users who never commented',
		(tableA.total_A/(SELECT COUNT(*) FROM users))*100 AS '%'
from(
SELECT COUNT(*) AS total_A FROM(
select users.username,count(comments.created_at) count
from users
left join comments on users.id = comments.user_id
group by username
having count = 0)AS total_number_of_users_without_comments) AS tableA
